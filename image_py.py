# -*- coding: utf-8 -*-
"""image.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16XmT-GS7UAcS6Vt61wkPgDoPUB28yLf1
"""

#Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras import layers
from tensorflow.keras.datasets import cifar10

#Load CIFAR-10 dataset
(x_train,y_train),(x_test, y_test)=cifar10.load_data()

#Normalize pixel values between 0 and 1
x_train=x_train.astype("float32")/255.0
x_test=x_test.astype("float32")/255.0

#Define model
model=keras.Sequential([keras.Input(shape=(32,32,3)),
                        layers.Conv2D(32,kernel_size=(3,3),activation="relu"),
                        layers.MaxPooling2D(pool_size=(2,2)),
                        layers.Conv2D(64,kernel_size=(3,3),activation="relu"),
                        layers.MaxPooling2D(pool_size=(2,2)),
                        layers.Flatten(),
                        layers.Dropout(0.5),
                        layers.Dense(10,activation="softmax")])

#Compile the model
model.compile(loss="sparse_categorical_crossentropy",optimizer="adam",metrics=["accuracy"])

#Train the model
history=model.fit(x_train,y_train,batch_size=128,epochs=10,validation_split=0.1)

#Evaluate the Model
test_loss,test_acc=model.evaluate(x_test,y_test,verbose=2)
print("\nTest accuracy:",test_acc)

#Plot the training history
plt.plot(history.history['accuracy'],label='accuracy')
plt.plot(history.history['val_accuracy'],label='val_accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0,1])
plt.legend(loc='lower right')
plt.show()